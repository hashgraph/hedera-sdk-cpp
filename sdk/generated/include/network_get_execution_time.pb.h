// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network_get_execution_time.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_network_5fget_5fexecution_5ftime_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_network_5fget_5fexecution_5ftime_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "basic_types.pb.h"
#include "query_header.pb.h"
#include "response_header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_network_5fget_5fexecution_5ftime_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_network_5fget_5fexecution_5ftime_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_network_5fget_5fexecution_5ftime_2eproto;
namespace proto {
class NetworkGetExecutionTimeQuery;
struct NetworkGetExecutionTimeQueryDefaultTypeInternal;
extern NetworkGetExecutionTimeQueryDefaultTypeInternal _NetworkGetExecutionTimeQuery_default_instance_;
class NetworkGetExecutionTimeResponse;
struct NetworkGetExecutionTimeResponseDefaultTypeInternal;
extern NetworkGetExecutionTimeResponseDefaultTypeInternal _NetworkGetExecutionTimeResponse_default_instance_;
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::NetworkGetExecutionTimeQuery* Arena::CreateMaybeMessage<::proto::NetworkGetExecutionTimeQuery>(Arena*);
template<> ::proto::NetworkGetExecutionTimeResponse* Arena::CreateMaybeMessage<::proto::NetworkGetExecutionTimeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {

// ===================================================================

class NetworkGetExecutionTimeQuery final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.NetworkGetExecutionTimeQuery) */ {
 public:
  inline NetworkGetExecutionTimeQuery() : NetworkGetExecutionTimeQuery(nullptr) {}
  ~NetworkGetExecutionTimeQuery() override;
  explicit PROTOBUF_CONSTEXPR NetworkGetExecutionTimeQuery(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NetworkGetExecutionTimeQuery(const NetworkGetExecutionTimeQuery& from);
  NetworkGetExecutionTimeQuery(NetworkGetExecutionTimeQuery&& from) noexcept
    : NetworkGetExecutionTimeQuery() {
    *this = ::std::move(from);
  }

  inline NetworkGetExecutionTimeQuery& operator=(const NetworkGetExecutionTimeQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkGetExecutionTimeQuery& operator=(NetworkGetExecutionTimeQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkGetExecutionTimeQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkGetExecutionTimeQuery* internal_default_instance() {
    return reinterpret_cast<const NetworkGetExecutionTimeQuery*>(
               &_NetworkGetExecutionTimeQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NetworkGetExecutionTimeQuery& a, NetworkGetExecutionTimeQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkGetExecutionTimeQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkGetExecutionTimeQuery* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkGetExecutionTimeQuery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NetworkGetExecutionTimeQuery>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NetworkGetExecutionTimeQuery& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const NetworkGetExecutionTimeQuery& from) {
    NetworkGetExecutionTimeQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkGetExecutionTimeQuery* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.NetworkGetExecutionTimeQuery";
  }
  protected:
  explicit NetworkGetExecutionTimeQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionIdsFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .proto.TransactionID transaction_ids = 2;
  int transaction_ids_size() const;
  private:
  int _internal_transaction_ids_size() const;
  public:
  void clear_transaction_ids();
  ::proto::TransactionID* mutable_transaction_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::TransactionID >*
      mutable_transaction_ids();
  private:
  const ::proto::TransactionID& _internal_transaction_ids(int index) const;
  ::proto::TransactionID* _internal_add_transaction_ids();
  public:
  const ::proto::TransactionID& transaction_ids(int index) const;
  ::proto::TransactionID* add_transaction_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::TransactionID >&
      transaction_ids() const;

  // .proto.QueryHeader header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::proto::QueryHeader& header() const;
  PROTOBUF_NODISCARD ::proto::QueryHeader* release_header();
  ::proto::QueryHeader* mutable_header();
  void set_allocated_header(::proto::QueryHeader* header);
  private:
  const ::proto::QueryHeader& _internal_header() const;
  ::proto::QueryHeader* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::proto::QueryHeader* header);
  ::proto::QueryHeader* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:proto.NetworkGetExecutionTimeQuery)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::TransactionID > transaction_ids_;
    ::proto::QueryHeader* header_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fget_5fexecution_5ftime_2eproto;
};
// -------------------------------------------------------------------

class NetworkGetExecutionTimeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.NetworkGetExecutionTimeResponse) */ {
 public:
  inline NetworkGetExecutionTimeResponse() : NetworkGetExecutionTimeResponse(nullptr) {}
  ~NetworkGetExecutionTimeResponse() override;
  explicit PROTOBUF_CONSTEXPR NetworkGetExecutionTimeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NetworkGetExecutionTimeResponse(const NetworkGetExecutionTimeResponse& from);
  NetworkGetExecutionTimeResponse(NetworkGetExecutionTimeResponse&& from) noexcept
    : NetworkGetExecutionTimeResponse() {
    *this = ::std::move(from);
  }

  inline NetworkGetExecutionTimeResponse& operator=(const NetworkGetExecutionTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkGetExecutionTimeResponse& operator=(NetworkGetExecutionTimeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkGetExecutionTimeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkGetExecutionTimeResponse* internal_default_instance() {
    return reinterpret_cast<const NetworkGetExecutionTimeResponse*>(
               &_NetworkGetExecutionTimeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NetworkGetExecutionTimeResponse& a, NetworkGetExecutionTimeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkGetExecutionTimeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkGetExecutionTimeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkGetExecutionTimeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NetworkGetExecutionTimeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NetworkGetExecutionTimeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const NetworkGetExecutionTimeResponse& from) {
    NetworkGetExecutionTimeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkGetExecutionTimeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.NetworkGetExecutionTimeResponse";
  }
  protected:
  explicit NetworkGetExecutionTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTimesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated uint64 execution_times = 2;
  int execution_times_size() const;
  private:
  int _internal_execution_times_size() const;
  public:
  void clear_execution_times();
  private:
  uint64_t _internal_execution_times(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_execution_times() const;
  void _internal_add_execution_times(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_execution_times();
  public:
  uint64_t execution_times(int index) const;
  void set_execution_times(int index, uint64_t value);
  void add_execution_times(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      execution_times() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_execution_times();

  // .proto.ResponseHeader header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::proto::ResponseHeader& header() const;
  PROTOBUF_NODISCARD ::proto::ResponseHeader* release_header();
  ::proto::ResponseHeader* mutable_header();
  void set_allocated_header(::proto::ResponseHeader* header);
  private:
  const ::proto::ResponseHeader& _internal_header() const;
  ::proto::ResponseHeader* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::proto::ResponseHeader* header);
  ::proto::ResponseHeader* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:proto.NetworkGetExecutionTimeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > execution_times_;
    mutable std::atomic<int> _execution_times_cached_byte_size_;
    ::proto::ResponseHeader* header_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fget_5fexecution_5ftime_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetworkGetExecutionTimeQuery

// .proto.QueryHeader header = 1;
inline bool NetworkGetExecutionTimeQuery::_internal_has_header() const {
  return this != internal_default_instance() && _impl_.header_ != nullptr;
}
inline bool NetworkGetExecutionTimeQuery::has_header() const {
  return _internal_has_header();
}
inline const ::proto::QueryHeader& NetworkGetExecutionTimeQuery::_internal_header() const {
  const ::proto::QueryHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::QueryHeader&>(
      ::proto::_QueryHeader_default_instance_);
}
inline const ::proto::QueryHeader& NetworkGetExecutionTimeQuery::header() const {
  // @@protoc_insertion_point(field_get:proto.NetworkGetExecutionTimeQuery.header)
  return _internal_header();
}
inline void NetworkGetExecutionTimeQuery::unsafe_arena_set_allocated_header(
    ::proto::QueryHeader* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.NetworkGetExecutionTimeQuery.header)
}
inline ::proto::QueryHeader* NetworkGetExecutionTimeQuery::release_header() {
  
  ::proto::QueryHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::proto::QueryHeader* NetworkGetExecutionTimeQuery::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:proto.NetworkGetExecutionTimeQuery.header)
  
  ::proto::QueryHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::proto::QueryHeader* NetworkGetExecutionTimeQuery::_internal_mutable_header() {
  
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::QueryHeader>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::proto::QueryHeader* NetworkGetExecutionTimeQuery::mutable_header() {
  ::proto::QueryHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:proto.NetworkGetExecutionTimeQuery.header)
  return _msg;
}
inline void NetworkGetExecutionTimeQuery::set_allocated_header(::proto::QueryHeader* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:proto.NetworkGetExecutionTimeQuery.header)
}

// repeated .proto.TransactionID transaction_ids = 2;
inline int NetworkGetExecutionTimeQuery::_internal_transaction_ids_size() const {
  return _impl_.transaction_ids_.size();
}
inline int NetworkGetExecutionTimeQuery::transaction_ids_size() const {
  return _internal_transaction_ids_size();
}
inline ::proto::TransactionID* NetworkGetExecutionTimeQuery::mutable_transaction_ids(int index) {
  // @@protoc_insertion_point(field_mutable:proto.NetworkGetExecutionTimeQuery.transaction_ids)
  return _impl_.transaction_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::TransactionID >*
NetworkGetExecutionTimeQuery::mutable_transaction_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.NetworkGetExecutionTimeQuery.transaction_ids)
  return &_impl_.transaction_ids_;
}
inline const ::proto::TransactionID& NetworkGetExecutionTimeQuery::_internal_transaction_ids(int index) const {
  return _impl_.transaction_ids_.Get(index);
}
inline const ::proto::TransactionID& NetworkGetExecutionTimeQuery::transaction_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.NetworkGetExecutionTimeQuery.transaction_ids)
  return _internal_transaction_ids(index);
}
inline ::proto::TransactionID* NetworkGetExecutionTimeQuery::_internal_add_transaction_ids() {
  return _impl_.transaction_ids_.Add();
}
inline ::proto::TransactionID* NetworkGetExecutionTimeQuery::add_transaction_ids() {
  ::proto::TransactionID* _add = _internal_add_transaction_ids();
  // @@protoc_insertion_point(field_add:proto.NetworkGetExecutionTimeQuery.transaction_ids)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::TransactionID >&
NetworkGetExecutionTimeQuery::transaction_ids() const {
  // @@protoc_insertion_point(field_list:proto.NetworkGetExecutionTimeQuery.transaction_ids)
  return _impl_.transaction_ids_;
}

// -------------------------------------------------------------------

// NetworkGetExecutionTimeResponse

// .proto.ResponseHeader header = 1;
inline bool NetworkGetExecutionTimeResponse::_internal_has_header() const {
  return this != internal_default_instance() && _impl_.header_ != nullptr;
}
inline bool NetworkGetExecutionTimeResponse::has_header() const {
  return _internal_has_header();
}
inline const ::proto::ResponseHeader& NetworkGetExecutionTimeResponse::_internal_header() const {
  const ::proto::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::ResponseHeader&>(
      ::proto::_ResponseHeader_default_instance_);
}
inline const ::proto::ResponseHeader& NetworkGetExecutionTimeResponse::header() const {
  // @@protoc_insertion_point(field_get:proto.NetworkGetExecutionTimeResponse.header)
  return _internal_header();
}
inline void NetworkGetExecutionTimeResponse::unsafe_arena_set_allocated_header(
    ::proto::ResponseHeader* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.NetworkGetExecutionTimeResponse.header)
}
inline ::proto::ResponseHeader* NetworkGetExecutionTimeResponse::release_header() {
  
  ::proto::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::proto::ResponseHeader* NetworkGetExecutionTimeResponse::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:proto.NetworkGetExecutionTimeResponse.header)
  
  ::proto::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::proto::ResponseHeader* NetworkGetExecutionTimeResponse::_internal_mutable_header() {
  
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::ResponseHeader>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::proto::ResponseHeader* NetworkGetExecutionTimeResponse::mutable_header() {
  ::proto::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:proto.NetworkGetExecutionTimeResponse.header)
  return _msg;
}
inline void NetworkGetExecutionTimeResponse::set_allocated_header(::proto::ResponseHeader* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:proto.NetworkGetExecutionTimeResponse.header)
}

// repeated uint64 execution_times = 2;
inline int NetworkGetExecutionTimeResponse::_internal_execution_times_size() const {
  return _impl_.execution_times_.size();
}
inline int NetworkGetExecutionTimeResponse::execution_times_size() const {
  return _internal_execution_times_size();
}
inline void NetworkGetExecutionTimeResponse::clear_execution_times() {
  _impl_.execution_times_.Clear();
}
inline uint64_t NetworkGetExecutionTimeResponse::_internal_execution_times(int index) const {
  return _impl_.execution_times_.Get(index);
}
inline uint64_t NetworkGetExecutionTimeResponse::execution_times(int index) const {
  // @@protoc_insertion_point(field_get:proto.NetworkGetExecutionTimeResponse.execution_times)
  return _internal_execution_times(index);
}
inline void NetworkGetExecutionTimeResponse::set_execution_times(int index, uint64_t value) {
  _impl_.execution_times_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.NetworkGetExecutionTimeResponse.execution_times)
}
inline void NetworkGetExecutionTimeResponse::_internal_add_execution_times(uint64_t value) {
  _impl_.execution_times_.Add(value);
}
inline void NetworkGetExecutionTimeResponse::add_execution_times(uint64_t value) {
  _internal_add_execution_times(value);
  // @@protoc_insertion_point(field_add:proto.NetworkGetExecutionTimeResponse.execution_times)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
NetworkGetExecutionTimeResponse::_internal_execution_times() const {
  return _impl_.execution_times_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
NetworkGetExecutionTimeResponse::execution_times() const {
  // @@protoc_insertion_point(field_list:proto.NetworkGetExecutionTimeResponse.execution_times)
  return _internal_execution_times();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
NetworkGetExecutionTimeResponse::_internal_mutable_execution_times() {
  return &_impl_.execution_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
NetworkGetExecutionTimeResponse::mutable_execution_times() {
  // @@protoc_insertion_point(field_mutable_list:proto.NetworkGetExecutionTimeResponse.execution_times)
  return _internal_mutable_execution_times();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_network_5fget_5fexecution_5ftime_2eproto
