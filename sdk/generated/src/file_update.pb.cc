// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_update.proto

#include "file_update.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR FileUpdateTransactionBody::FileUpdateTransactionBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contents_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.fileid_)*/nullptr
  , /*decltype(_impl_.expirationtime_)*/nullptr
  , /*decltype(_impl_.keys_)*/nullptr
  , /*decltype(_impl_.memo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileUpdateTransactionBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileUpdateTransactionBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileUpdateTransactionBodyDefaultTypeInternal() {}
  union {
    FileUpdateTransactionBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileUpdateTransactionBodyDefaultTypeInternal _FileUpdateTransactionBody_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_file_5fupdate_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_file_5fupdate_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_file_5fupdate_2eproto = nullptr;

const uint32_t TableStruct_file_5fupdate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _impl_.fileid_),
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _impl_.expirationtime_),
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _impl_.keys_),
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _impl_.contents_),
  PROTOBUF_FIELD_OFFSET(::proto::FileUpdateTransactionBody, _impl_.memo_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::FileUpdateTransactionBody)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_FileUpdateTransactionBody_default_instance_._instance,
};

const char descriptor_table_protodef_file_5fupdate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021file_update.proto\022\005proto\032\021basic_types."
  "proto\032\017timestamp.proto\032\036google/protobuf/"
  "wrappers.proto\"\300\001\n\031FileUpdateTransaction"
  "Body\022\035\n\006fileID\030\001 \001(\0132\r.proto.FileID\022(\n\016e"
  "xpirationTime\030\002 \001(\0132\020.proto.Timestamp\022\034\n"
  "\004keys\030\003 \001(\0132\016.proto.KeyList\022\020\n\010contents\030"
  "\004 \001(\014\022*\n\004memo\030\005 \001(\0132\034.google.protobuf.St"
  "ringValueB&\n\"com.hederahashgraph.api.pro"
  "to.javaP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_file_5fupdate_2eproto_deps[3] = {
  &::descriptor_table_basic_5ftypes_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_timestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_file_5fupdate_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_file_5fupdate_2eproto = {
    false, false, 337, descriptor_table_protodef_file_5fupdate_2eproto,
    "file_update.proto",
    &descriptor_table_file_5fupdate_2eproto_once, descriptor_table_file_5fupdate_2eproto_deps, 3, 1,
    schemas, file_default_instances, TableStruct_file_5fupdate_2eproto::offsets,
    file_level_metadata_file_5fupdate_2eproto, file_level_enum_descriptors_file_5fupdate_2eproto,
    file_level_service_descriptors_file_5fupdate_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_file_5fupdate_2eproto_getter() {
  return &descriptor_table_file_5fupdate_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_file_5fupdate_2eproto(&descriptor_table_file_5fupdate_2eproto);
namespace proto {

// ===================================================================

class FileUpdateTransactionBody::_Internal {
 public:
  static const ::proto::FileID& fileid(const FileUpdateTransactionBody* msg);
  static const ::proto::Timestamp& expirationtime(const FileUpdateTransactionBody* msg);
  static const ::proto::KeyList& keys(const FileUpdateTransactionBody* msg);
  static const ::PROTOBUF_NAMESPACE_ID::StringValue& memo(const FileUpdateTransactionBody* msg);
};

const ::proto::FileID&
FileUpdateTransactionBody::_Internal::fileid(const FileUpdateTransactionBody* msg) {
  return *msg->_impl_.fileid_;
}
const ::proto::Timestamp&
FileUpdateTransactionBody::_Internal::expirationtime(const FileUpdateTransactionBody* msg) {
  return *msg->_impl_.expirationtime_;
}
const ::proto::KeyList&
FileUpdateTransactionBody::_Internal::keys(const FileUpdateTransactionBody* msg) {
  return *msg->_impl_.keys_;
}
const ::PROTOBUF_NAMESPACE_ID::StringValue&
FileUpdateTransactionBody::_Internal::memo(const FileUpdateTransactionBody* msg) {
  return *msg->_impl_.memo_;
}
void FileUpdateTransactionBody::clear_fileid() {
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
}
void FileUpdateTransactionBody::clear_expirationtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.expirationtime_ != nullptr) {
    delete _impl_.expirationtime_;
  }
  _impl_.expirationtime_ = nullptr;
}
void FileUpdateTransactionBody::clear_keys() {
  if (GetArenaForAllocation() == nullptr && _impl_.keys_ != nullptr) {
    delete _impl_.keys_;
  }
  _impl_.keys_ = nullptr;
}
void FileUpdateTransactionBody::clear_memo() {
  if (GetArenaForAllocation() == nullptr && _impl_.memo_ != nullptr) {
    delete _impl_.memo_;
  }
  _impl_.memo_ = nullptr;
}
FileUpdateTransactionBody::FileUpdateTransactionBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.FileUpdateTransactionBody)
}
FileUpdateTransactionBody::FileUpdateTransactionBody(const FileUpdateTransactionBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileUpdateTransactionBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contents_){}
    , decltype(_impl_.fileid_){nullptr}
    , decltype(_impl_.expirationtime_){nullptr}
    , decltype(_impl_.keys_){nullptr}
    , decltype(_impl_.memo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contents().empty()) {
    _this->_impl_.contents_.Set(from._internal_contents(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_fileid()) {
    _this->_impl_.fileid_ = new ::proto::FileID(*from._impl_.fileid_);
  }
  if (from._internal_has_expirationtime()) {
    _this->_impl_.expirationtime_ = new ::proto::Timestamp(*from._impl_.expirationtime_);
  }
  if (from._internal_has_keys()) {
    _this->_impl_.keys_ = new ::proto::KeyList(*from._impl_.keys_);
  }
  if (from._internal_has_memo()) {
    _this->_impl_.memo_ = new ::PROTOBUF_NAMESPACE_ID::StringValue(*from._impl_.memo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FileUpdateTransactionBody)
}

inline void FileUpdateTransactionBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contents_){}
    , decltype(_impl_.fileid_){nullptr}
    , decltype(_impl_.expirationtime_){nullptr}
    , decltype(_impl_.keys_){nullptr}
    , decltype(_impl_.memo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileUpdateTransactionBody::~FileUpdateTransactionBody() {
  // @@protoc_insertion_point(destructor:proto.FileUpdateTransactionBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileUpdateTransactionBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contents_.Destroy();
  if (this != internal_default_instance()) delete _impl_.fileid_;
  if (this != internal_default_instance()) delete _impl_.expirationtime_;
  if (this != internal_default_instance()) delete _impl_.keys_;
  if (this != internal_default_instance()) delete _impl_.memo_;
}

void FileUpdateTransactionBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileUpdateTransactionBody::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FileUpdateTransactionBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contents_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.expirationtime_ != nullptr) {
    delete _impl_.expirationtime_;
  }
  _impl_.expirationtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.keys_ != nullptr) {
    delete _impl_.keys_;
  }
  _impl_.keys_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.memo_ != nullptr) {
    delete _impl_.memo_;
  }
  _impl_.memo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileUpdateTransactionBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.FileID fileID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.Timestamp expirationTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expirationtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.KeyList keys = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_keys(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes contents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_contents();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.StringValue memo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_memo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileUpdateTransactionBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FileUpdateTransactionBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FileID fileID = 1;
  if (this->_internal_has_fileid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fileid(this),
        _Internal::fileid(this).GetCachedSize(), target, stream);
  }

  // .proto.Timestamp expirationTime = 2;
  if (this->_internal_has_expirationtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::expirationtime(this),
        _Internal::expirationtime(this).GetCachedSize(), target, stream);
  }

  // .proto.KeyList keys = 3;
  if (this->_internal_has_keys()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::keys(this),
        _Internal::keys(this).GetCachedSize(), target, stream);
  }

  // bytes contents = 4;
  if (!this->_internal_contents().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_contents(), target);
  }

  // .google.protobuf.StringValue memo = 5;
  if (this->_internal_has_memo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::memo(this),
        _Internal::memo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FileUpdateTransactionBody)
  return target;
}

size_t FileUpdateTransactionBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FileUpdateTransactionBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes contents = 4;
  if (!this->_internal_contents().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contents());
  }

  // .proto.FileID fileID = 1;
  if (this->_internal_has_fileid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fileid_);
  }

  // .proto.Timestamp expirationTime = 2;
  if (this->_internal_has_expirationtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expirationtime_);
  }

  // .proto.KeyList keys = 3;
  if (this->_internal_has_keys()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.keys_);
  }

  // .google.protobuf.StringValue memo = 5;
  if (this->_internal_has_memo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.memo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileUpdateTransactionBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileUpdateTransactionBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileUpdateTransactionBody::GetClassData() const { return &_class_data_; }


void FileUpdateTransactionBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileUpdateTransactionBody*>(&to_msg);
  auto& from = static_cast<const FileUpdateTransactionBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.FileUpdateTransactionBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contents().empty()) {
    _this->_internal_set_contents(from._internal_contents());
  }
  if (from._internal_has_fileid()) {
    _this->_internal_mutable_fileid()->::proto::FileID::MergeFrom(
        from._internal_fileid());
  }
  if (from._internal_has_expirationtime()) {
    _this->_internal_mutable_expirationtime()->::proto::Timestamp::MergeFrom(
        from._internal_expirationtime());
  }
  if (from._internal_has_keys()) {
    _this->_internal_mutable_keys()->::proto::KeyList::MergeFrom(
        from._internal_keys());
  }
  if (from._internal_has_memo()) {
    _this->_internal_mutable_memo()->::PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(
        from._internal_memo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileUpdateTransactionBody::CopyFrom(const FileUpdateTransactionBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FileUpdateTransactionBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUpdateTransactionBody::IsInitialized() const {
  return true;
}

void FileUpdateTransactionBody::InternalSwap(FileUpdateTransactionBody* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.contents_, lhs_arena,
      &other->_impl_.contents_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileUpdateTransactionBody, _impl_.memo_)
      + sizeof(FileUpdateTransactionBody::_impl_.memo_)
      - PROTOBUF_FIELD_OFFSET(FileUpdateTransactionBody, _impl_.fileid_)>(
          reinterpret_cast<char*>(&_impl_.fileid_),
          reinterpret_cast<char*>(&other->_impl_.fileid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileUpdateTransactionBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5fupdate_2eproto_getter, &descriptor_table_file_5fupdate_2eproto_once,
      file_level_metadata_file_5fupdate_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::FileUpdateTransactionBody*
Arena::CreateMaybeMessage< ::proto::FileUpdateTransactionBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::FileUpdateTransactionBody >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
