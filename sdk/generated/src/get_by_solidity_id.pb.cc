// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_by_solidity_id.proto

#include "get_by_solidity_id.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR GetBySolidityIDQuery::GetBySolidityIDQuery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.solidityid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBySolidityIDQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBySolidityIDQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBySolidityIDQueryDefaultTypeInternal() {}
  union {
    GetBySolidityIDQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBySolidityIDQueryDefaultTypeInternal _GetBySolidityIDQuery_default_instance_;
PROTOBUF_CONSTEXPR GetBySolidityIDResponse::GetBySolidityIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.accountid_)*/nullptr
  , /*decltype(_impl_.fileid_)*/nullptr
  , /*decltype(_impl_.contractid_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBySolidityIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBySolidityIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBySolidityIDResponseDefaultTypeInternal() {}
  union {
    GetBySolidityIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBySolidityIDResponseDefaultTypeInternal _GetBySolidityIDResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_get_5fby_5fsolidity_5fid_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_get_5fby_5fsolidity_5fid_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_get_5fby_5fsolidity_5fid_2eproto = nullptr;

const uint32_t TableStruct_get_5fby_5fsolidity_5fid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDQuery, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDQuery, _impl_.solidityid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDResponse, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDResponse, _impl_.accountid_),
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDResponse, _impl_.fileid_),
  PROTOBUF_FIELD_OFFSET(::proto::GetBySolidityIDResponse, _impl_.contractid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::GetBySolidityIDQuery)},
  { 8, -1, -1, sizeof(::proto::GetBySolidityIDResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_GetBySolidityIDQuery_default_instance_._instance,
  &::proto::_GetBySolidityIDResponse_default_instance_._instance,
};

const char descriptor_table_protodef_get_5fby_5fsolidity_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030get_by_solidity_id.proto\022\005proto\032\021basic"
  "_types.proto\032\022query_header.proto\032\025respon"
  "se_header.proto\"N\n\024GetBySolidityIDQuery\022"
  "\"\n\006header\030\001 \001(\0132\022.proto.QueryHeader\022\022\n\ns"
  "olidityID\030\002 \001(\t\"\253\001\n\027GetBySolidityIDRespo"
  "nse\022%\n\006header\030\001 \001(\0132\025.proto.ResponseHead"
  "er\022#\n\taccountID\030\002 \001(\0132\020.proto.AccountID\022"
  "\035\n\006fileID\030\003 \001(\0132\r.proto.FileID\022%\n\ncontra"
  "ctID\030\004 \001(\0132\021.proto.ContractIDB&\n\"com.hed"
  "erahashgraph.api.proto.javaP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_get_5fby_5fsolidity_5fid_2eproto_deps[3] = {
  &::descriptor_table_basic_5ftypes_2eproto,
  &::descriptor_table_query_5fheader_2eproto,
  &::descriptor_table_response_5fheader_2eproto,
};
static ::_pbi::once_flag descriptor_table_get_5fby_5fsolidity_5fid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_get_5fby_5fsolidity_5fid_2eproto = {
    false, false, 397, descriptor_table_protodef_get_5fby_5fsolidity_5fid_2eproto,
    "get_by_solidity_id.proto",
    &descriptor_table_get_5fby_5fsolidity_5fid_2eproto_once, descriptor_table_get_5fby_5fsolidity_5fid_2eproto_deps, 3, 2,
    schemas, file_default_instances, TableStruct_get_5fby_5fsolidity_5fid_2eproto::offsets,
    file_level_metadata_get_5fby_5fsolidity_5fid_2eproto, file_level_enum_descriptors_get_5fby_5fsolidity_5fid_2eproto,
    file_level_service_descriptors_get_5fby_5fsolidity_5fid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_get_5fby_5fsolidity_5fid_2eproto_getter() {
  return &descriptor_table_get_5fby_5fsolidity_5fid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_get_5fby_5fsolidity_5fid_2eproto(&descriptor_table_get_5fby_5fsolidity_5fid_2eproto);
namespace proto {

// ===================================================================

class GetBySolidityIDQuery::_Internal {
 public:
  static const ::proto::QueryHeader& header(const GetBySolidityIDQuery* msg);
};

const ::proto::QueryHeader&
GetBySolidityIDQuery::_Internal::header(const GetBySolidityIDQuery* msg) {
  return *msg->_impl_.header_;
}
void GetBySolidityIDQuery::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
GetBySolidityIDQuery::GetBySolidityIDQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetBySolidityIDQuery)
}
GetBySolidityIDQuery::GetBySolidityIDQuery(const GetBySolidityIDQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBySolidityIDQuery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.solidityid_){}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.solidityid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.solidityid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_solidityid().empty()) {
    _this->_impl_.solidityid_.Set(from._internal_solidityid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::QueryHeader(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetBySolidityIDQuery)
}

inline void GetBySolidityIDQuery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.solidityid_){}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.solidityid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.solidityid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBySolidityIDQuery::~GetBySolidityIDQuery() {
  // @@protoc_insertion_point(destructor:proto.GetBySolidityIDQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBySolidityIDQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.solidityid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void GetBySolidityIDQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBySolidityIDQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBySolidityIDQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.solidityid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBySolidityIDQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.QueryHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string solidityID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_solidityid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetBySolidityIDQuery.solidityID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBySolidityIDQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBySolidityIDQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // string solidityID = 2;
  if (!this->_internal_solidityid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_solidityid().data(), static_cast<int>(this->_internal_solidityid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetBySolidityIDQuery.solidityID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_solidityid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBySolidityIDQuery)
  return target;
}

size_t GetBySolidityIDQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBySolidityIDQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string solidityID = 2;
  if (!this->_internal_solidityid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_solidityid());
  }

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBySolidityIDQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBySolidityIDQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBySolidityIDQuery::GetClassData() const { return &_class_data_; }


void GetBySolidityIDQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBySolidityIDQuery*>(&to_msg);
  auto& from = static_cast<const GetBySolidityIDQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBySolidityIDQuery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_solidityid().empty()) {
    _this->_internal_set_solidityid(from._internal_solidityid());
  }
  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::QueryHeader::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBySolidityIDQuery::CopyFrom(const GetBySolidityIDQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBySolidityIDQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBySolidityIDQuery::IsInitialized() const {
  return true;
}

void GetBySolidityIDQuery::InternalSwap(GetBySolidityIDQuery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.solidityid_, lhs_arena,
      &other->_impl_.solidityid_, rhs_arena
  );
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBySolidityIDQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_get_5fby_5fsolidity_5fid_2eproto_getter, &descriptor_table_get_5fby_5fsolidity_5fid_2eproto_once,
      file_level_metadata_get_5fby_5fsolidity_5fid_2eproto[0]);
}

// ===================================================================

class GetBySolidityIDResponse::_Internal {
 public:
  static const ::proto::ResponseHeader& header(const GetBySolidityIDResponse* msg);
  static const ::proto::AccountID& accountid(const GetBySolidityIDResponse* msg);
  static const ::proto::FileID& fileid(const GetBySolidityIDResponse* msg);
  static const ::proto::ContractID& contractid(const GetBySolidityIDResponse* msg);
};

const ::proto::ResponseHeader&
GetBySolidityIDResponse::_Internal::header(const GetBySolidityIDResponse* msg) {
  return *msg->_impl_.header_;
}
const ::proto::AccountID&
GetBySolidityIDResponse::_Internal::accountid(const GetBySolidityIDResponse* msg) {
  return *msg->_impl_.accountid_;
}
const ::proto::FileID&
GetBySolidityIDResponse::_Internal::fileid(const GetBySolidityIDResponse* msg) {
  return *msg->_impl_.fileid_;
}
const ::proto::ContractID&
GetBySolidityIDResponse::_Internal::contractid(const GetBySolidityIDResponse* msg) {
  return *msg->_impl_.contractid_;
}
void GetBySolidityIDResponse::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void GetBySolidityIDResponse::clear_accountid() {
  if (GetArenaForAllocation() == nullptr && _impl_.accountid_ != nullptr) {
    delete _impl_.accountid_;
  }
  _impl_.accountid_ = nullptr;
}
void GetBySolidityIDResponse::clear_fileid() {
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
}
void GetBySolidityIDResponse::clear_contractid() {
  if (GetArenaForAllocation() == nullptr && _impl_.contractid_ != nullptr) {
    delete _impl_.contractid_;
  }
  _impl_.contractid_ = nullptr;
}
GetBySolidityIDResponse::GetBySolidityIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetBySolidityIDResponse)
}
GetBySolidityIDResponse::GetBySolidityIDResponse(const GetBySolidityIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBySolidityIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.accountid_){nullptr}
    , decltype(_impl_.fileid_){nullptr}
    , decltype(_impl_.contractid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::ResponseHeader(*from._impl_.header_);
  }
  if (from._internal_has_accountid()) {
    _this->_impl_.accountid_ = new ::proto::AccountID(*from._impl_.accountid_);
  }
  if (from._internal_has_fileid()) {
    _this->_impl_.fileid_ = new ::proto::FileID(*from._impl_.fileid_);
  }
  if (from._internal_has_contractid()) {
    _this->_impl_.contractid_ = new ::proto::ContractID(*from._impl_.contractid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetBySolidityIDResponse)
}

inline void GetBySolidityIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.accountid_){nullptr}
    , decltype(_impl_.fileid_){nullptr}
    , decltype(_impl_.contractid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBySolidityIDResponse::~GetBySolidityIDResponse() {
  // @@protoc_insertion_point(destructor:proto.GetBySolidityIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBySolidityIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.accountid_;
  if (this != internal_default_instance()) delete _impl_.fileid_;
  if (this != internal_default_instance()) delete _impl_.contractid_;
}

void GetBySolidityIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBySolidityIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBySolidityIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.accountid_ != nullptr) {
    delete _impl_.accountid_;
  }
  _impl_.accountid_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.contractid_ != nullptr) {
    delete _impl_.contractid_;
  }
  _impl_.contractid_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBySolidityIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.AccountID accountID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.FileID fileID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ContractID contractID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_contractid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBySolidityIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBySolidityIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.AccountID accountID = 2;
  if (this->_internal_has_accountid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::accountid(this),
        _Internal::accountid(this).GetCachedSize(), target, stream);
  }

  // .proto.FileID fileID = 3;
  if (this->_internal_has_fileid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::fileid(this),
        _Internal::fileid(this).GetCachedSize(), target, stream);
  }

  // .proto.ContractID contractID = 4;
  if (this->_internal_has_contractid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::contractid(this),
        _Internal::contractid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBySolidityIDResponse)
  return target;
}

size_t GetBySolidityIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBySolidityIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.AccountID accountID = 2;
  if (this->_internal_has_accountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.accountid_);
  }

  // .proto.FileID fileID = 3;
  if (this->_internal_has_fileid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fileid_);
  }

  // .proto.ContractID contractID = 4;
  if (this->_internal_has_contractid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contractid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBySolidityIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBySolidityIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBySolidityIDResponse::GetClassData() const { return &_class_data_; }


void GetBySolidityIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBySolidityIDResponse*>(&to_msg);
  auto& from = static_cast<const GetBySolidityIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBySolidityIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::ResponseHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_accountid()) {
    _this->_internal_mutable_accountid()->::proto::AccountID::MergeFrom(
        from._internal_accountid());
  }
  if (from._internal_has_fileid()) {
    _this->_internal_mutable_fileid()->::proto::FileID::MergeFrom(
        from._internal_fileid());
  }
  if (from._internal_has_contractid()) {
    _this->_internal_mutable_contractid()->::proto::ContractID::MergeFrom(
        from._internal_contractid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBySolidityIDResponse::CopyFrom(const GetBySolidityIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBySolidityIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBySolidityIDResponse::IsInitialized() const {
  return true;
}

void GetBySolidityIDResponse::InternalSwap(GetBySolidityIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBySolidityIDResponse, _impl_.contractid_)
      + sizeof(GetBySolidityIDResponse::_impl_.contractid_)
      - PROTOBUF_FIELD_OFFSET(GetBySolidityIDResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBySolidityIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_get_5fby_5fsolidity_5fid_2eproto_getter, &descriptor_table_get_5fby_5fsolidity_5fid_2eproto_once,
      file_level_metadata_get_5fby_5fsolidity_5fid_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::GetBySolidityIDQuery*
Arena::CreateMaybeMessage< ::proto::GetBySolidityIDQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetBySolidityIDQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetBySolidityIDResponse*
Arena::CreateMaybeMessage< ::proto::GetBySolidityIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetBySolidityIDResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
