// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_get_contents.proto

#include "file_get_contents.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR FileGetContentsQuery::FileGetContentsQuery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.fileid_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileGetContentsQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileGetContentsQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileGetContentsQueryDefaultTypeInternal() {}
  union {
    FileGetContentsQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileGetContentsQueryDefaultTypeInternal _FileGetContentsQuery_default_instance_;
PROTOBUF_CONSTEXPR FileGetContentsResponse_FileContents::FileGetContentsResponse_FileContents(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contents_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.fileid_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileGetContentsResponse_FileContentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileGetContentsResponse_FileContentsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileGetContentsResponse_FileContentsDefaultTypeInternal() {}
  union {
    FileGetContentsResponse_FileContents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileGetContentsResponse_FileContentsDefaultTypeInternal _FileGetContentsResponse_FileContents_default_instance_;
PROTOBUF_CONSTEXPR FileGetContentsResponse::FileGetContentsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.filecontents_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileGetContentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileGetContentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileGetContentsResponseDefaultTypeInternal() {}
  union {
    FileGetContentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileGetContentsResponseDefaultTypeInternal _FileGetContentsResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_file_5fget_5fcontents_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_file_5fget_5fcontents_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_file_5fget_5fcontents_2eproto = nullptr;

const uint32_t TableStruct_file_5fget_5fcontents_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsQuery, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsQuery, _impl_.fileid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse_FileContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse_FileContents, _impl_.fileid_),
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse_FileContents, _impl_.contents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::FileGetContentsResponse, _impl_.filecontents_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::FileGetContentsQuery)},
  { 8, -1, -1, sizeof(::proto::FileGetContentsResponse_FileContents)},
  { 16, -1, -1, sizeof(::proto::FileGetContentsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_FileGetContentsQuery_default_instance_._instance,
  &::proto::_FileGetContentsResponse_FileContents_default_instance_._instance,
  &::proto::_FileGetContentsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_file_5fget_5fcontents_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027file_get_contents.proto\022\005proto\032\021basic_"
  "types.proto\032\022query_header.proto\032\025respons"
  "e_header.proto\"Y\n\024FileGetContentsQuery\022\""
  "\n\006header\030\001 \001(\0132\022.proto.QueryHeader\022\035\n\006fi"
  "leID\030\002 \001(\0132\r.proto.FileID\"\304\001\n\027FileGetCon"
  "tentsResponse\022%\n\006header\030\001 \001(\0132\025.proto.Re"
  "sponseHeader\022A\n\014fileContents\030\002 \001(\0132+.pro"
  "to.FileGetContentsResponse.FileContents\032"
  "\?\n\014FileContents\022\035\n\006fileID\030\001 \001(\0132\r.proto."
  "FileID\022\020\n\010contents\030\002 \001(\014B&\n\"com.hederaha"
  "shgraph.api.proto.javaP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_file_5fget_5fcontents_2eproto_deps[3] = {
  &::descriptor_table_basic_5ftypes_2eproto,
  &::descriptor_table_query_5fheader_2eproto,
  &::descriptor_table_response_5fheader_2eproto,
};
static ::_pbi::once_flag descriptor_table_file_5fget_5fcontents_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_file_5fget_5fcontents_2eproto = {
    false, false, 432, descriptor_table_protodef_file_5fget_5fcontents_2eproto,
    "file_get_contents.proto",
    &descriptor_table_file_5fget_5fcontents_2eproto_once, descriptor_table_file_5fget_5fcontents_2eproto_deps, 3, 3,
    schemas, file_default_instances, TableStruct_file_5fget_5fcontents_2eproto::offsets,
    file_level_metadata_file_5fget_5fcontents_2eproto, file_level_enum_descriptors_file_5fget_5fcontents_2eproto,
    file_level_service_descriptors_file_5fget_5fcontents_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_file_5fget_5fcontents_2eproto_getter() {
  return &descriptor_table_file_5fget_5fcontents_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_file_5fget_5fcontents_2eproto(&descriptor_table_file_5fget_5fcontents_2eproto);
namespace proto {

// ===================================================================

class FileGetContentsQuery::_Internal {
 public:
  static const ::proto::QueryHeader& header(const FileGetContentsQuery* msg);
  static const ::proto::FileID& fileid(const FileGetContentsQuery* msg);
};

const ::proto::QueryHeader&
FileGetContentsQuery::_Internal::header(const FileGetContentsQuery* msg) {
  return *msg->_impl_.header_;
}
const ::proto::FileID&
FileGetContentsQuery::_Internal::fileid(const FileGetContentsQuery* msg) {
  return *msg->_impl_.fileid_;
}
void FileGetContentsQuery::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void FileGetContentsQuery::clear_fileid() {
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
}
FileGetContentsQuery::FileGetContentsQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.FileGetContentsQuery)
}
FileGetContentsQuery::FileGetContentsQuery(const FileGetContentsQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileGetContentsQuery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.fileid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::QueryHeader(*from._impl_.header_);
  }
  if (from._internal_has_fileid()) {
    _this->_impl_.fileid_ = new ::proto::FileID(*from._impl_.fileid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FileGetContentsQuery)
}

inline void FileGetContentsQuery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.fileid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FileGetContentsQuery::~FileGetContentsQuery() {
  // @@protoc_insertion_point(destructor:proto.FileGetContentsQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileGetContentsQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.fileid_;
}

void FileGetContentsQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileGetContentsQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FileGetContentsQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileGetContentsQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.QueryHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.FileID fileID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileGetContentsQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FileGetContentsQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.FileID fileID = 2;
  if (this->_internal_has_fileid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fileid(this),
        _Internal::fileid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FileGetContentsQuery)
  return target;
}

size_t FileGetContentsQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FileGetContentsQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.FileID fileID = 2;
  if (this->_internal_has_fileid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fileid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileGetContentsQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileGetContentsQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileGetContentsQuery::GetClassData() const { return &_class_data_; }


void FileGetContentsQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileGetContentsQuery*>(&to_msg);
  auto& from = static_cast<const FileGetContentsQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.FileGetContentsQuery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::QueryHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_fileid()) {
    _this->_internal_mutable_fileid()->::proto::FileID::MergeFrom(
        from._internal_fileid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileGetContentsQuery::CopyFrom(const FileGetContentsQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FileGetContentsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileGetContentsQuery::IsInitialized() const {
  return true;
}

void FileGetContentsQuery::InternalSwap(FileGetContentsQuery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileGetContentsQuery, _impl_.fileid_)
      + sizeof(FileGetContentsQuery::_impl_.fileid_)
      - PROTOBUF_FIELD_OFFSET(FileGetContentsQuery, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileGetContentsQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5fget_5fcontents_2eproto_getter, &descriptor_table_file_5fget_5fcontents_2eproto_once,
      file_level_metadata_file_5fget_5fcontents_2eproto[0]);
}

// ===================================================================

class FileGetContentsResponse_FileContents::_Internal {
 public:
  static const ::proto::FileID& fileid(const FileGetContentsResponse_FileContents* msg);
};

const ::proto::FileID&
FileGetContentsResponse_FileContents::_Internal::fileid(const FileGetContentsResponse_FileContents* msg) {
  return *msg->_impl_.fileid_;
}
void FileGetContentsResponse_FileContents::clear_fileid() {
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
}
FileGetContentsResponse_FileContents::FileGetContentsResponse_FileContents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.FileGetContentsResponse.FileContents)
}
FileGetContentsResponse_FileContents::FileGetContentsResponse_FileContents(const FileGetContentsResponse_FileContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileGetContentsResponse_FileContents* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contents_){}
    , decltype(_impl_.fileid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contents().empty()) {
    _this->_impl_.contents_.Set(from._internal_contents(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_fileid()) {
    _this->_impl_.fileid_ = new ::proto::FileID(*from._impl_.fileid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FileGetContentsResponse.FileContents)
}

inline void FileGetContentsResponse_FileContents::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contents_){}
    , decltype(_impl_.fileid_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.contents_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.contents_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileGetContentsResponse_FileContents::~FileGetContentsResponse_FileContents() {
  // @@protoc_insertion_point(destructor:proto.FileGetContentsResponse.FileContents)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileGetContentsResponse_FileContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contents_.Destroy();
  if (this != internal_default_instance()) delete _impl_.fileid_;
}

void FileGetContentsResponse_FileContents::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileGetContentsResponse_FileContents::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FileGetContentsResponse.FileContents)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contents_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.fileid_ != nullptr) {
    delete _impl_.fileid_;
  }
  _impl_.fileid_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileGetContentsResponse_FileContents::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.FileID fileID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fileid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes contents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contents();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileGetContentsResponse_FileContents::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FileGetContentsResponse.FileContents)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.FileID fileID = 1;
  if (this->_internal_has_fileid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fileid(this),
        _Internal::fileid(this).GetCachedSize(), target, stream);
  }

  // bytes contents = 2;
  if (!this->_internal_contents().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FileGetContentsResponse.FileContents)
  return target;
}

size_t FileGetContentsResponse_FileContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FileGetContentsResponse.FileContents)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes contents = 2;
  if (!this->_internal_contents().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contents());
  }

  // .proto.FileID fileID = 1;
  if (this->_internal_has_fileid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fileid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileGetContentsResponse_FileContents::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileGetContentsResponse_FileContents::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileGetContentsResponse_FileContents::GetClassData() const { return &_class_data_; }


void FileGetContentsResponse_FileContents::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileGetContentsResponse_FileContents*>(&to_msg);
  auto& from = static_cast<const FileGetContentsResponse_FileContents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.FileGetContentsResponse.FileContents)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contents().empty()) {
    _this->_internal_set_contents(from._internal_contents());
  }
  if (from._internal_has_fileid()) {
    _this->_internal_mutable_fileid()->::proto::FileID::MergeFrom(
        from._internal_fileid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileGetContentsResponse_FileContents::CopyFrom(const FileGetContentsResponse_FileContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FileGetContentsResponse.FileContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileGetContentsResponse_FileContents::IsInitialized() const {
  return true;
}

void FileGetContentsResponse_FileContents::InternalSwap(FileGetContentsResponse_FileContents* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.contents_, lhs_arena,
      &other->_impl_.contents_, rhs_arena
  );
  swap(_impl_.fileid_, other->_impl_.fileid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileGetContentsResponse_FileContents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5fget_5fcontents_2eproto_getter, &descriptor_table_file_5fget_5fcontents_2eproto_once,
      file_level_metadata_file_5fget_5fcontents_2eproto[1]);
}

// ===================================================================

class FileGetContentsResponse::_Internal {
 public:
  static const ::proto::ResponseHeader& header(const FileGetContentsResponse* msg);
  static const ::proto::FileGetContentsResponse_FileContents& filecontents(const FileGetContentsResponse* msg);
};

const ::proto::ResponseHeader&
FileGetContentsResponse::_Internal::header(const FileGetContentsResponse* msg) {
  return *msg->_impl_.header_;
}
const ::proto::FileGetContentsResponse_FileContents&
FileGetContentsResponse::_Internal::filecontents(const FileGetContentsResponse* msg) {
  return *msg->_impl_.filecontents_;
}
void FileGetContentsResponse::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
FileGetContentsResponse::FileGetContentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.FileGetContentsResponse)
}
FileGetContentsResponse::FileGetContentsResponse(const FileGetContentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileGetContentsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.filecontents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::ResponseHeader(*from._impl_.header_);
  }
  if (from._internal_has_filecontents()) {
    _this->_impl_.filecontents_ = new ::proto::FileGetContentsResponse_FileContents(*from._impl_.filecontents_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FileGetContentsResponse)
}

inline void FileGetContentsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.filecontents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FileGetContentsResponse::~FileGetContentsResponse() {
  // @@protoc_insertion_point(destructor:proto.FileGetContentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileGetContentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.filecontents_;
}

void FileGetContentsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileGetContentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FileGetContentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.filecontents_ != nullptr) {
    delete _impl_.filecontents_;
  }
  _impl_.filecontents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileGetContentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.FileGetContentsResponse.FileContents fileContents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filecontents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileGetContentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FileGetContentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.FileGetContentsResponse.FileContents fileContents = 2;
  if (this->_internal_has_filecontents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::filecontents(this),
        _Internal::filecontents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FileGetContentsResponse)
  return target;
}

size_t FileGetContentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FileGetContentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.FileGetContentsResponse.FileContents fileContents = 2;
  if (this->_internal_has_filecontents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.filecontents_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileGetContentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileGetContentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileGetContentsResponse::GetClassData() const { return &_class_data_; }


void FileGetContentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileGetContentsResponse*>(&to_msg);
  auto& from = static_cast<const FileGetContentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.FileGetContentsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::ResponseHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_filecontents()) {
    _this->_internal_mutable_filecontents()->::proto::FileGetContentsResponse_FileContents::MergeFrom(
        from._internal_filecontents());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileGetContentsResponse::CopyFrom(const FileGetContentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FileGetContentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileGetContentsResponse::IsInitialized() const {
  return true;
}

void FileGetContentsResponse::InternalSwap(FileGetContentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileGetContentsResponse, _impl_.filecontents_)
      + sizeof(FileGetContentsResponse::_impl_.filecontents_)
      - PROTOBUF_FIELD_OFFSET(FileGetContentsResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileGetContentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5fget_5fcontents_2eproto_getter, &descriptor_table_file_5fget_5fcontents_2eproto_once,
      file_level_metadata_file_5fget_5fcontents_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::FileGetContentsQuery*
Arena::CreateMaybeMessage< ::proto::FileGetContentsQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::FileGetContentsQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::FileGetContentsResponse_FileContents*
Arena::CreateMaybeMessage< ::proto::FileGetContentsResponse_FileContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::FileGetContentsResponse_FileContents >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::FileGetContentsResponse*
Arena::CreateMaybeMessage< ::proto::FileGetContentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::FileGetContentsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
