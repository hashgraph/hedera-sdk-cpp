// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transaction_get_receipt.proto

#include "transaction_get_receipt.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR TransactionGetReceiptQuery::TransactionGetReceiptQuery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.transactionid_)*/nullptr
  , /*decltype(_impl_.includeduplicates_)*/false
  , /*decltype(_impl_.include_child_receipts_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransactionGetReceiptQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionGetReceiptQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionGetReceiptQueryDefaultTypeInternal() {}
  union {
    TransactionGetReceiptQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionGetReceiptQueryDefaultTypeInternal _TransactionGetReceiptQuery_default_instance_;
PROTOBUF_CONSTEXPR TransactionGetReceiptResponse::TransactionGetReceiptResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.duplicatetransactionreceipts_)*/{}
  , /*decltype(_impl_.child_transaction_receipts_)*/{}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.receipt_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransactionGetReceiptResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionGetReceiptResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionGetReceiptResponseDefaultTypeInternal() {}
  union {
    TransactionGetReceiptResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionGetReceiptResponseDefaultTypeInternal _TransactionGetReceiptResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_transaction_5fget_5freceipt_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_transaction_5fget_5freceipt_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_transaction_5fget_5freceipt_2eproto = nullptr;

const uint32_t TableStruct_transaction_5fget_5freceipt_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptQuery, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptQuery, _impl_.transactionid_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptQuery, _impl_.includeduplicates_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptQuery, _impl_.include_child_receipts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptResponse, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptResponse, _impl_.receipt_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptResponse, _impl_.duplicatetransactionreceipts_),
  PROTOBUF_FIELD_OFFSET(::proto::TransactionGetReceiptResponse, _impl_.child_transaction_receipts_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::TransactionGetReceiptQuery)},
  { 10, -1, -1, sizeof(::proto::TransactionGetReceiptResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_TransactionGetReceiptQuery_default_instance_._instance,
  &::proto::_TransactionGetReceiptResponse_default_instance_._instance,
};

const char descriptor_table_protodef_transaction_5fget_5freceipt_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035transaction_get_receipt.proto\022\005proto\032\031"
  "transaction_receipt.proto\032\021basic_types.p"
  "roto\032\022query_header.proto\032\025response_heade"
  "r.proto\"\250\001\n\032TransactionGetReceiptQuery\022\""
  "\n\006header\030\001 \001(\0132\022.proto.QueryHeader\022+\n\rtr"
  "ansactionID\030\002 \001(\0132\024.proto.TransactionID\022"
  "\031\n\021includeDuplicates\030\003 \001(\010\022\036\n\026include_ch"
  "ild_receipts\030\004 \001(\010\"\362\001\n\035TransactionGetRec"
  "eiptResponse\022%\n\006header\030\001 \001(\0132\025.proto.Res"
  "ponseHeader\022*\n\007receipt\030\002 \001(\0132\031.proto.Tra"
  "nsactionReceipt\022\?\n\034duplicateTransactionR"
  "eceipts\030\004 \003(\0132\031.proto.TransactionReceipt"
  "\022=\n\032child_transaction_receipts\030\005 \003(\0132\031.p"
  "roto.TransactionReceiptB&\n\"com.hederahas"
  "hgraph.api.proto.javaP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_transaction_5fget_5freceipt_2eproto_deps[4] = {
  &::descriptor_table_basic_5ftypes_2eproto,
  &::descriptor_table_query_5fheader_2eproto,
  &::descriptor_table_response_5fheader_2eproto,
  &::descriptor_table_transaction_5freceipt_2eproto,
};
static ::_pbi::once_flag descriptor_table_transaction_5fget_5freceipt_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transaction_5fget_5freceipt_2eproto = {
    false, false, 591, descriptor_table_protodef_transaction_5fget_5freceipt_2eproto,
    "transaction_get_receipt.proto",
    &descriptor_table_transaction_5fget_5freceipt_2eproto_once, descriptor_table_transaction_5fget_5freceipt_2eproto_deps, 4, 2,
    schemas, file_default_instances, TableStruct_transaction_5fget_5freceipt_2eproto::offsets,
    file_level_metadata_transaction_5fget_5freceipt_2eproto, file_level_enum_descriptors_transaction_5fget_5freceipt_2eproto,
    file_level_service_descriptors_transaction_5fget_5freceipt_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transaction_5fget_5freceipt_2eproto_getter() {
  return &descriptor_table_transaction_5fget_5freceipt_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transaction_5fget_5freceipt_2eproto(&descriptor_table_transaction_5fget_5freceipt_2eproto);
namespace proto {

// ===================================================================

class TransactionGetReceiptQuery::_Internal {
 public:
  static const ::proto::QueryHeader& header(const TransactionGetReceiptQuery* msg);
  static const ::proto::TransactionID& transactionid(const TransactionGetReceiptQuery* msg);
};

const ::proto::QueryHeader&
TransactionGetReceiptQuery::_Internal::header(const TransactionGetReceiptQuery* msg) {
  return *msg->_impl_.header_;
}
const ::proto::TransactionID&
TransactionGetReceiptQuery::_Internal::transactionid(const TransactionGetReceiptQuery* msg) {
  return *msg->_impl_.transactionid_;
}
void TransactionGetReceiptQuery::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void TransactionGetReceiptQuery::clear_transactionid() {
  if (GetArenaForAllocation() == nullptr && _impl_.transactionid_ != nullptr) {
    delete _impl_.transactionid_;
  }
  _impl_.transactionid_ = nullptr;
}
TransactionGetReceiptQuery::TransactionGetReceiptQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.TransactionGetReceiptQuery)
}
TransactionGetReceiptQuery::TransactionGetReceiptQuery(const TransactionGetReceiptQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransactionGetReceiptQuery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.transactionid_){nullptr}
    , decltype(_impl_.includeduplicates_){}
    , decltype(_impl_.include_child_receipts_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::QueryHeader(*from._impl_.header_);
  }
  if (from._internal_has_transactionid()) {
    _this->_impl_.transactionid_ = new ::proto::TransactionID(*from._impl_.transactionid_);
  }
  ::memcpy(&_impl_.includeduplicates_, &from._impl_.includeduplicates_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.include_child_receipts_) -
    reinterpret_cast<char*>(&_impl_.includeduplicates_)) + sizeof(_impl_.include_child_receipts_));
  // @@protoc_insertion_point(copy_constructor:proto.TransactionGetReceiptQuery)
}

inline void TransactionGetReceiptQuery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.transactionid_){nullptr}
    , decltype(_impl_.includeduplicates_){false}
    , decltype(_impl_.include_child_receipts_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransactionGetReceiptQuery::~TransactionGetReceiptQuery() {
  // @@protoc_insertion_point(destructor:proto.TransactionGetReceiptQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransactionGetReceiptQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.transactionid_;
}

void TransactionGetReceiptQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransactionGetReceiptQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TransactionGetReceiptQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.transactionid_ != nullptr) {
    delete _impl_.transactionid_;
  }
  _impl_.transactionid_ = nullptr;
  ::memset(&_impl_.includeduplicates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.include_child_receipts_) -
      reinterpret_cast<char*>(&_impl_.includeduplicates_)) + sizeof(_impl_.include_child_receipts_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionGetReceiptQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.QueryHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.TransactionID transactionID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transactionid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeDuplicates = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.includeduplicates_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool include_child_receipts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.include_child_receipts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransactionGetReceiptQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.TransactionGetReceiptQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.TransactionID transactionID = 2;
  if (this->_internal_has_transactionid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transactionid(this),
        _Internal::transactionid(this).GetCachedSize(), target, stream);
  }

  // bool includeDuplicates = 3;
  if (this->_internal_includeduplicates() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_includeduplicates(), target);
  }

  // bool include_child_receipts = 4;
  if (this->_internal_include_child_receipts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_include_child_receipts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TransactionGetReceiptQuery)
  return target;
}

size_t TransactionGetReceiptQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TransactionGetReceiptQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.TransactionID transactionID = 2;
  if (this->_internal_has_transactionid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transactionid_);
  }

  // bool includeDuplicates = 3;
  if (this->_internal_includeduplicates() != 0) {
    total_size += 1 + 1;
  }

  // bool include_child_receipts = 4;
  if (this->_internal_include_child_receipts() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransactionGetReceiptQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransactionGetReceiptQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransactionGetReceiptQuery::GetClassData() const { return &_class_data_; }


void TransactionGetReceiptQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransactionGetReceiptQuery*>(&to_msg);
  auto& from = static_cast<const TransactionGetReceiptQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.TransactionGetReceiptQuery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::QueryHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_transactionid()) {
    _this->_internal_mutable_transactionid()->::proto::TransactionID::MergeFrom(
        from._internal_transactionid());
  }
  if (from._internal_includeduplicates() != 0) {
    _this->_internal_set_includeduplicates(from._internal_includeduplicates());
  }
  if (from._internal_include_child_receipts() != 0) {
    _this->_internal_set_include_child_receipts(from._internal_include_child_receipts());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionGetReceiptQuery::CopyFrom(const TransactionGetReceiptQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TransactionGetReceiptQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionGetReceiptQuery::IsInitialized() const {
  return true;
}

void TransactionGetReceiptQuery::InternalSwap(TransactionGetReceiptQuery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransactionGetReceiptQuery, _impl_.include_child_receipts_)
      + sizeof(TransactionGetReceiptQuery::_impl_.include_child_receipts_)
      - PROTOBUF_FIELD_OFFSET(TransactionGetReceiptQuery, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionGetReceiptQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transaction_5fget_5freceipt_2eproto_getter, &descriptor_table_transaction_5fget_5freceipt_2eproto_once,
      file_level_metadata_transaction_5fget_5freceipt_2eproto[0]);
}

// ===================================================================

class TransactionGetReceiptResponse::_Internal {
 public:
  static const ::proto::ResponseHeader& header(const TransactionGetReceiptResponse* msg);
  static const ::proto::TransactionReceipt& receipt(const TransactionGetReceiptResponse* msg);
};

const ::proto::ResponseHeader&
TransactionGetReceiptResponse::_Internal::header(const TransactionGetReceiptResponse* msg) {
  return *msg->_impl_.header_;
}
const ::proto::TransactionReceipt&
TransactionGetReceiptResponse::_Internal::receipt(const TransactionGetReceiptResponse* msg) {
  return *msg->_impl_.receipt_;
}
void TransactionGetReceiptResponse::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void TransactionGetReceiptResponse::clear_receipt() {
  if (GetArenaForAllocation() == nullptr && _impl_.receipt_ != nullptr) {
    delete _impl_.receipt_;
  }
  _impl_.receipt_ = nullptr;
}
void TransactionGetReceiptResponse::clear_duplicatetransactionreceipts() {
  _impl_.duplicatetransactionreceipts_.Clear();
}
void TransactionGetReceiptResponse::clear_child_transaction_receipts() {
  _impl_.child_transaction_receipts_.Clear();
}
TransactionGetReceiptResponse::TransactionGetReceiptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.TransactionGetReceiptResponse)
}
TransactionGetReceiptResponse::TransactionGetReceiptResponse(const TransactionGetReceiptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransactionGetReceiptResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.duplicatetransactionreceipts_){from._impl_.duplicatetransactionreceipts_}
    , decltype(_impl_.child_transaction_receipts_){from._impl_.child_transaction_receipts_}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.receipt_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::ResponseHeader(*from._impl_.header_);
  }
  if (from._internal_has_receipt()) {
    _this->_impl_.receipt_ = new ::proto::TransactionReceipt(*from._impl_.receipt_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.TransactionGetReceiptResponse)
}

inline void TransactionGetReceiptResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.duplicatetransactionreceipts_){arena}
    , decltype(_impl_.child_transaction_receipts_){arena}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.receipt_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransactionGetReceiptResponse::~TransactionGetReceiptResponse() {
  // @@protoc_insertion_point(destructor:proto.TransactionGetReceiptResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransactionGetReceiptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.duplicatetransactionreceipts_.~RepeatedPtrField();
  _impl_.child_transaction_receipts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.receipt_;
}

void TransactionGetReceiptResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransactionGetReceiptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TransactionGetReceiptResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.duplicatetransactionreceipts_.Clear();
  _impl_.child_transaction_receipts_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.receipt_ != nullptr) {
    delete _impl_.receipt_;
  }
  _impl_.receipt_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionGetReceiptResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.TransactionReceipt receipt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_receipt(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.TransactionReceipt duplicateTransactionReceipts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_duplicatetransactionreceipts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.TransactionReceipt child_transaction_receipts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_child_transaction_receipts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransactionGetReceiptResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.TransactionGetReceiptResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.TransactionReceipt receipt = 2;
  if (this->_internal_has_receipt()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::receipt(this),
        _Internal::receipt(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.TransactionReceipt duplicateTransactionReceipts = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_duplicatetransactionreceipts_size()); i < n; i++) {
    const auto& repfield = this->_internal_duplicatetransactionreceipts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .proto.TransactionReceipt child_transaction_receipts = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_child_transaction_receipts_size()); i < n; i++) {
    const auto& repfield = this->_internal_child_transaction_receipts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TransactionGetReceiptResponse)
  return target;
}

size_t TransactionGetReceiptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TransactionGetReceiptResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.TransactionReceipt duplicateTransactionReceipts = 4;
  total_size += 1UL * this->_internal_duplicatetransactionreceipts_size();
  for (const auto& msg : this->_impl_.duplicatetransactionreceipts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .proto.TransactionReceipt child_transaction_receipts = 5;
  total_size += 1UL * this->_internal_child_transaction_receipts_size();
  for (const auto& msg : this->_impl_.child_transaction_receipts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.TransactionReceipt receipt = 2;
  if (this->_internal_has_receipt()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.receipt_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransactionGetReceiptResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransactionGetReceiptResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransactionGetReceiptResponse::GetClassData() const { return &_class_data_; }


void TransactionGetReceiptResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransactionGetReceiptResponse*>(&to_msg);
  auto& from = static_cast<const TransactionGetReceiptResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.TransactionGetReceiptResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.duplicatetransactionreceipts_.MergeFrom(from._impl_.duplicatetransactionreceipts_);
  _this->_impl_.child_transaction_receipts_.MergeFrom(from._impl_.child_transaction_receipts_);
  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::ResponseHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_receipt()) {
    _this->_internal_mutable_receipt()->::proto::TransactionReceipt::MergeFrom(
        from._internal_receipt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionGetReceiptResponse::CopyFrom(const TransactionGetReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TransactionGetReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionGetReceiptResponse::IsInitialized() const {
  return true;
}

void TransactionGetReceiptResponse::InternalSwap(TransactionGetReceiptResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.duplicatetransactionreceipts_.InternalSwap(&other->_impl_.duplicatetransactionreceipts_);
  _impl_.child_transaction_receipts_.InternalSwap(&other->_impl_.child_transaction_receipts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransactionGetReceiptResponse, _impl_.receipt_)
      + sizeof(TransactionGetReceiptResponse::_impl_.receipt_)
      - PROTOBUF_FIELD_OFFSET(TransactionGetReceiptResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionGetReceiptResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transaction_5fget_5freceipt_2eproto_getter, &descriptor_table_transaction_5fget_5freceipt_2eproto_once,
      file_level_metadata_transaction_5fget_5freceipt_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::TransactionGetReceiptQuery*
Arena::CreateMaybeMessage< ::proto::TransactionGetReceiptQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::TransactionGetReceiptQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::TransactionGetReceiptResponse*
Arena::CreateMaybeMessage< ::proto::TransactionGetReceiptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::TransactionGetReceiptResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
