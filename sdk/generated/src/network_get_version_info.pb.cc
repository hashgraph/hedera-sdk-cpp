// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network_get_version_info.proto

#include "network_get_version_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR NetworkGetVersionInfoQuery::NetworkGetVersionInfoQuery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetworkGetVersionInfoQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkGetVersionInfoQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkGetVersionInfoQueryDefaultTypeInternal() {}
  union {
    NetworkGetVersionInfoQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkGetVersionInfoQueryDefaultTypeInternal _NetworkGetVersionInfoQuery_default_instance_;
PROTOBUF_CONSTEXPR NetworkGetVersionInfoResponse::NetworkGetVersionInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.hapiprotoversion_)*/nullptr
  , /*decltype(_impl_.hederaservicesversion_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetworkGetVersionInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkGetVersionInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkGetVersionInfoResponseDefaultTypeInternal() {}
  union {
    NetworkGetVersionInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkGetVersionInfoResponseDefaultTypeInternal _NetworkGetVersionInfoResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_network_5fget_5fversion_5finfo_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_network_5fget_5fversion_5finfo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_network_5fget_5fversion_5finfo_2eproto = nullptr;

const uint32_t TableStruct_network_5fget_5fversion_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoQuery, _impl_.header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoResponse, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoResponse, _impl_.hapiprotoversion_),
  PROTOBUF_FIELD_OFFSET(::proto::NetworkGetVersionInfoResponse, _impl_.hederaservicesversion_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::NetworkGetVersionInfoQuery)},
  { 7, -1, -1, sizeof(::proto::NetworkGetVersionInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_NetworkGetVersionInfoQuery_default_instance_._instance,
  &::proto::_NetworkGetVersionInfoResponse_default_instance_._instance,
};

const char descriptor_table_protodef_network_5fget_5fversion_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036network_get_version_info.proto\022\005proto\032"
  "\021basic_types.proto\032\022query_header.proto\032\025"
  "response_header.proto\"@\n\032NetworkGetVersi"
  "onInfoQuery\022\"\n\006header\030\001 \001(\0132\022.proto.Quer"
  "yHeader\"\257\001\n\035NetworkGetVersionInfoRespons"
  "e\022%\n\006header\030\001 \001(\0132\025.proto.ResponseHeader"
  "\0220\n\020hapiProtoVersion\030\002 \001(\0132\026.proto.Seman"
  "ticVersion\0225\n\025hederaServicesVersion\030\003 \001("
  "\0132\026.proto.SemanticVersionB&\n\"com.hederah"
  "ashgraph.api.proto.javaP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_network_5fget_5fversion_5finfo_2eproto_deps[3] = {
  &::descriptor_table_basic_5ftypes_2eproto,
  &::descriptor_table_query_5fheader_2eproto,
  &::descriptor_table_response_5fheader_2eproto,
};
static ::_pbi::once_flag descriptor_table_network_5fget_5fversion_5finfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_network_5fget_5fversion_5finfo_2eproto = {
    false, false, 393, descriptor_table_protodef_network_5fget_5fversion_5finfo_2eproto,
    "network_get_version_info.proto",
    &descriptor_table_network_5fget_5fversion_5finfo_2eproto_once, descriptor_table_network_5fget_5fversion_5finfo_2eproto_deps, 3, 2,
    schemas, file_default_instances, TableStruct_network_5fget_5fversion_5finfo_2eproto::offsets,
    file_level_metadata_network_5fget_5fversion_5finfo_2eproto, file_level_enum_descriptors_network_5fget_5fversion_5finfo_2eproto,
    file_level_service_descriptors_network_5fget_5fversion_5finfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_network_5fget_5fversion_5finfo_2eproto_getter() {
  return &descriptor_table_network_5fget_5fversion_5finfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_network_5fget_5fversion_5finfo_2eproto(&descriptor_table_network_5fget_5fversion_5finfo_2eproto);
namespace proto {

// ===================================================================

class NetworkGetVersionInfoQuery::_Internal {
 public:
  static const ::proto::QueryHeader& header(const NetworkGetVersionInfoQuery* msg);
};

const ::proto::QueryHeader&
NetworkGetVersionInfoQuery::_Internal::header(const NetworkGetVersionInfoQuery* msg) {
  return *msg->_impl_.header_;
}
void NetworkGetVersionInfoQuery::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
NetworkGetVersionInfoQuery::NetworkGetVersionInfoQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.NetworkGetVersionInfoQuery)
}
NetworkGetVersionInfoQuery::NetworkGetVersionInfoQuery(const NetworkGetVersionInfoQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetworkGetVersionInfoQuery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::QueryHeader(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.NetworkGetVersionInfoQuery)
}

inline void NetworkGetVersionInfoQuery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NetworkGetVersionInfoQuery::~NetworkGetVersionInfoQuery() {
  // @@protoc_insertion_point(destructor:proto.NetworkGetVersionInfoQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetworkGetVersionInfoQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
}

void NetworkGetVersionInfoQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetworkGetVersionInfoQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NetworkGetVersionInfoQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetworkGetVersionInfoQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.QueryHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetworkGetVersionInfoQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.NetworkGetVersionInfoQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NetworkGetVersionInfoQuery)
  return target;
}

size_t NetworkGetVersionInfoQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NetworkGetVersionInfoQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.QueryHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetworkGetVersionInfoQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetworkGetVersionInfoQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetworkGetVersionInfoQuery::GetClassData() const { return &_class_data_; }


void NetworkGetVersionInfoQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetworkGetVersionInfoQuery*>(&to_msg);
  auto& from = static_cast<const NetworkGetVersionInfoQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.NetworkGetVersionInfoQuery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::QueryHeader::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkGetVersionInfoQuery::CopyFrom(const NetworkGetVersionInfoQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NetworkGetVersionInfoQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkGetVersionInfoQuery::IsInitialized() const {
  return true;
}

void NetworkGetVersionInfoQuery::InternalSwap(NetworkGetVersionInfoQuery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkGetVersionInfoQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_network_5fget_5fversion_5finfo_2eproto_getter, &descriptor_table_network_5fget_5fversion_5finfo_2eproto_once,
      file_level_metadata_network_5fget_5fversion_5finfo_2eproto[0]);
}

// ===================================================================

class NetworkGetVersionInfoResponse::_Internal {
 public:
  static const ::proto::ResponseHeader& header(const NetworkGetVersionInfoResponse* msg);
  static const ::proto::SemanticVersion& hapiprotoversion(const NetworkGetVersionInfoResponse* msg);
  static const ::proto::SemanticVersion& hederaservicesversion(const NetworkGetVersionInfoResponse* msg);
};

const ::proto::ResponseHeader&
NetworkGetVersionInfoResponse::_Internal::header(const NetworkGetVersionInfoResponse* msg) {
  return *msg->_impl_.header_;
}
const ::proto::SemanticVersion&
NetworkGetVersionInfoResponse::_Internal::hapiprotoversion(const NetworkGetVersionInfoResponse* msg) {
  return *msg->_impl_.hapiprotoversion_;
}
const ::proto::SemanticVersion&
NetworkGetVersionInfoResponse::_Internal::hederaservicesversion(const NetworkGetVersionInfoResponse* msg) {
  return *msg->_impl_.hederaservicesversion_;
}
void NetworkGetVersionInfoResponse::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void NetworkGetVersionInfoResponse::clear_hapiprotoversion() {
  if (GetArenaForAllocation() == nullptr && _impl_.hapiprotoversion_ != nullptr) {
    delete _impl_.hapiprotoversion_;
  }
  _impl_.hapiprotoversion_ = nullptr;
}
void NetworkGetVersionInfoResponse::clear_hederaservicesversion() {
  if (GetArenaForAllocation() == nullptr && _impl_.hederaservicesversion_ != nullptr) {
    delete _impl_.hederaservicesversion_;
  }
  _impl_.hederaservicesversion_ = nullptr;
}
NetworkGetVersionInfoResponse::NetworkGetVersionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.NetworkGetVersionInfoResponse)
}
NetworkGetVersionInfoResponse::NetworkGetVersionInfoResponse(const NetworkGetVersionInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetworkGetVersionInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.hapiprotoversion_){nullptr}
    , decltype(_impl_.hederaservicesversion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::proto::ResponseHeader(*from._impl_.header_);
  }
  if (from._internal_has_hapiprotoversion()) {
    _this->_impl_.hapiprotoversion_ = new ::proto::SemanticVersion(*from._impl_.hapiprotoversion_);
  }
  if (from._internal_has_hederaservicesversion()) {
    _this->_impl_.hederaservicesversion_ = new ::proto::SemanticVersion(*from._impl_.hederaservicesversion_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.NetworkGetVersionInfoResponse)
}

inline void NetworkGetVersionInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.hapiprotoversion_){nullptr}
    , decltype(_impl_.hederaservicesversion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NetworkGetVersionInfoResponse::~NetworkGetVersionInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.NetworkGetVersionInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetworkGetVersionInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.hapiprotoversion_;
  if (this != internal_default_instance()) delete _impl_.hederaservicesversion_;
}

void NetworkGetVersionInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetworkGetVersionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NetworkGetVersionInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.hapiprotoversion_ != nullptr) {
    delete _impl_.hapiprotoversion_;
  }
  _impl_.hapiprotoversion_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.hederaservicesversion_ != nullptr) {
    delete _impl_.hederaservicesversion_;
  }
  _impl_.hederaservicesversion_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetworkGetVersionInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SemanticVersion hapiProtoVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_hapiprotoversion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SemanticVersion hederaServicesVersion = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_hederaservicesversion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetworkGetVersionInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.NetworkGetVersionInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .proto.SemanticVersion hapiProtoVersion = 2;
  if (this->_internal_has_hapiprotoversion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::hapiprotoversion(this),
        _Internal::hapiprotoversion(this).GetCachedSize(), target, stream);
  }

  // .proto.SemanticVersion hederaServicesVersion = 3;
  if (this->_internal_has_hederaservicesversion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::hederaservicesversion(this),
        _Internal::hederaservicesversion(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NetworkGetVersionInfoResponse)
  return target;
}

size_t NetworkGetVersionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NetworkGetVersionInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .proto.SemanticVersion hapiProtoVersion = 2;
  if (this->_internal_has_hapiprotoversion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.hapiprotoversion_);
  }

  // .proto.SemanticVersion hederaServicesVersion = 3;
  if (this->_internal_has_hederaservicesversion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.hederaservicesversion_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetworkGetVersionInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetworkGetVersionInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetworkGetVersionInfoResponse::GetClassData() const { return &_class_data_; }


void NetworkGetVersionInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetworkGetVersionInfoResponse*>(&to_msg);
  auto& from = static_cast<const NetworkGetVersionInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.NetworkGetVersionInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::proto::ResponseHeader::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_hapiprotoversion()) {
    _this->_internal_mutable_hapiprotoversion()->::proto::SemanticVersion::MergeFrom(
        from._internal_hapiprotoversion());
  }
  if (from._internal_has_hederaservicesversion()) {
    _this->_internal_mutable_hederaservicesversion()->::proto::SemanticVersion::MergeFrom(
        from._internal_hederaservicesversion());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkGetVersionInfoResponse::CopyFrom(const NetworkGetVersionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NetworkGetVersionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkGetVersionInfoResponse::IsInitialized() const {
  return true;
}

void NetworkGetVersionInfoResponse::InternalSwap(NetworkGetVersionInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkGetVersionInfoResponse, _impl_.hederaservicesversion_)
      + sizeof(NetworkGetVersionInfoResponse::_impl_.hederaservicesversion_)
      - PROTOBUF_FIELD_OFFSET(NetworkGetVersionInfoResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkGetVersionInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_network_5fget_5fversion_5finfo_2eproto_getter, &descriptor_table_network_5fget_5fversion_5finfo_2eproto_once,
      file_level_metadata_network_5fget_5fversion_5finfo_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::NetworkGetVersionInfoQuery*
Arena::CreateMaybeMessage< ::proto::NetworkGetVersionInfoQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::NetworkGetVersionInfoQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::NetworkGetVersionInfoResponse*
Arena::CreateMaybeMessage< ::proto::NetworkGetVersionInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::NetworkGetVersionInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
