name: "ZXC: Build Library"
on:
  workflow_call:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: [ self-hosted, Linux, xlarge, ephemeral ]

    env:
      HEDERA_NETWORK: localhost
    strategy:
      matrix:
        include:
          - os: Linux
            preset: linux-x64

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          submodules: true

      - name: Run Clang-Format
        uses: jidicula/clang-format-action@f62da5e3d3a2d88ff364771d9d938773a618ab5e # v4.11.0
        with:
          clang-format-version: "17"
          check-path: "src"

      - name: Setup Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades \
              ca-certificates \
              curl \
              gnupg \
              lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Use Node.js 21
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 21

      - name: Install Local Node
        run: sudo npm install -g @hashgraph/hedera-local

      - name: Install Linux Prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libc6-dbg libgtest-dev build-essential

      - name: Ensure Binary Cache Path Exists
        run: mkdir -p "${{ github.workspace }}/b/vcpkg_cache"

      - name: Install CMake & Ninja
        uses: lukka/get-cmake@4931ab1fc1604964c055eb330edb3f6b26ba0cfa # v3.29.2

      - name: Setup VCPkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          binaryCachePath: ${{ github.workspace }}/b/vcpkg_cache

      - name: Convert VCPkg to Full Clone
        run: |
          cd vcpkg
          git fetch --unshallow --prune

      - name: CMake Build (Debug)
        uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        env:
          VCPKG_BINARY_SOURCES: clear
        with:
          configurePreset: ${{ matrix.preset }}-debug
          buildPreset: ${{ matrix.preset }}-debug

      - name: CMake Build (Release)
        if: github.event.pull_request.merged == true
        uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        env:
          VCPKG_BINARY_SOURCES: clear
        with:
          configurePreset: ${{ matrix.preset }}-release
          buildPreset: ${{ matrix.preset }}-release

      # - name: List Directory Structure
      #     if: ${{ contains(runner.os, 'Windows') && always() }}
      #     shell: pwsh
      #     run: tree /F build

      - name: Start the local node
        run: sudo npx @hashgraph/hedera-local start -d --network local --network-tag=0.49.0-alpha.3

      - name: Start CTest suite (Debug)
        run: ctest -C Debug --test-dir build/${{ matrix.preset }}-debug --output-on-failure

      - name: Start CTest suite (Release)
        if: github.event.pull_request.merged == true
        run: ctest -C Debug --test-dir build/${{ matrix.preset }}-release --output-on-failure

      - name: Stop the local node
        run: sudo npx @hashgraph/hedera-local stop

      - name: Compute Short SHA
        id: sha
        run: echo "short=$(echo -n "${{ github.sha }}" | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: Attach Artifact
        if: github.event.pull_request.merged == true
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: hapi-library-${{ runner.os }}-${{ steps.sha.outputs.short }}
          path: package/
          if-no-files-found: warn
